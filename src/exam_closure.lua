---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by larryhou.
--- DateTime: 2018/9/5 3:03 PM
---

function round(x)
    return math.floor(x + 0.5)
end

function circle(cx, cy, r)
    return function (x, y)
        return round(math.sqrt((x - cx)^2 + (y - cy)^2) + 0.5) <= r
    end
end

function rect(l, r, b, t)
    return function (x,y)
        return l <= x and x <= r and b <= y and y <= t
    end
end

function complement(s)
    return function(x, y)
        return not s(x, y)
    end
end

function union(s1, s2)
    return function(x, y)
        return s1(x, y) or s2(x, y)
    end
end

function intersection(s1, s2)
    return function(x, y)
        return s1(x, y) and s2(x, y)
    end
end

function difference(s1, s2)
    return function(x, y)
        return s1(x, y) and not s2(x, y)
    end
end

function translate(s, dx, dy)
    return function(x, y)
        return s(x - dx, y - dy)
    end
end

function rotate(s, angle)
    return function(x, y)
        return s(y * math.sin(angle) + x * math.cos(angle), y * math.cos(angle) - x * math.sin(angle))
    end
end

function plot(s, w, h, quality)
    quality = quality or 4
    iw, ih = w * quality, h * quality
    io.write('P1\n', iw, ' ', ih, '\n')
    for y = 1, ih do
        for x = 1, iw do
            io.write(s(x/quality, y/quality) and 1 or 0, ' ')
        end
        io.write('\n')
    end
    io.flush()
end

function integral(f, a, b)
    return function(x, delta)
        delta = delta or 0.1
        p = a
        x = x <= b and x or b
        sum = 0
        while p <= x do
            sum = sum + f(p) * delta
            p = p + delta
        end
        return sum
    end
end

function polynomial(a)
    return function(x)
        sum = 0
        for n = #a,1,-1 do
            sum = sum + a[n] * x^(n-1)
        end
        return sum
    end
end

local download_dir = os.getenv('HOME')..'/Downloads'
io.output(io.open(download_dir..'/plot.pbm', 'w'))

c1 = circle(50, 50, 48)
c2 = translate(c1, 10, 0)
u1 = difference(c1, c2)
b1 = rect(-20,20,-20,20)
b2 = translate(rotate(b1, math.pi / 4), 30, 30)
plot(u1,100,100)

is = integral(math.sin, 0, 2 * math.pi)
print(is(math.pi, 0.00001))

p1 = polynomial({3,0,1})
print(p1(0))
print(p1(5))
print(p1(10))